name: "Fix stupid mistakes"
description: "Automatically fix stupid mistakes"
runs:
  using: "composite"
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
        cache: pip
        cache-dependency-path: Pipfile.lock
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        sdk: 3.0.7
    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: 1.38.3
    - name: Install required stuff
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev
        pip install -r pip-requirements.txt
        pip install -c pip-constraints.txt autoflake black isort
      shell: bash
    - name: Run autoflake
      run: autoflake --recursive --in-place --remove-all-unused-imports --remove-unused-variables --remove-duplicate-keys .
      shell: bash
    - name: Run isort
      run: isort .
      shell: bash
    - name: Run Black
      run: black .
      shell: bash
    - name: Install dprint
      run: curl -sSf https://dprint.dev/install.sh | sh -s 0.42.5
      shell: bash
    - name: Run dprint
      run: ~/.dprint/bin/dprint fmt --diff
      shell: bash
    - name: Install dart-sass
      run: |
        wget -O /usr/local/bin/buf https://github.com/bufbuild/buf/releases/download/v${VERSION_BUF}/buf-$(uname -s)-$(uname -m)
        chmod +x /usr/local/bin/buf
        pushd /tmp
        wget https://github.com/sass/dart-sass/archive/refs/tags/${VERSION}.tar.gz
        tar xf ${VERSION}.tar.gz
        cd dart-sass-${VERSION}
        dart pub get
        dart run grinder protobuf
        sed -i "s/math.Random()/math.Random(0)/" lib/src/functions/*.dart
        dart compile exe bin/sass.dart --output /usr/local/bin/dart-sass
        cd ..
        rm -fr ${VERSION}.tar.gz dart-sass-${VERSION}
        popd
      shell: bash
      env:
        VERSION: 1.69.5
        VERSION_BUF: 1.28.1
    - name: Generate snow
      run: dart-sass -s compressed style/snow.scss style/snow.css
      shell: bash
    - name: Build JS & CSS
      run: deno task clean && deno task build
      shell: bash
    - name: Generate humans.txt
      run: ./scripts/humans.py
      shell: bash
    - name: Sort methods
      run: ./scripts/sort_python_code.py
      shell: bash
    - name: Fix word-files for hangman solver
      run: ./scripts/fix_hangman_solver_word_files.py
      shell: bash
    - name: Generate config.ini.default
      run: python3 -m an_website --save-config-to example-configurations/config.ini.default -c
      shell: bash
    - name: Update env
      run: |
        D=$(python -c "print((_:=__import__('datetime')).datetime.now(tz=_.timezone.utc).replace(minute=0, second=0, microsecond=0).isoformat())")
        echo "GIT_AUTHOR_DATE=${D}" >> "${GITHUB_ENV}"
        echo "GIT_COMMITTER_DATE=${D}" >> "${GITHUB_ENV}"
      shell: bash
    - name: Push changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_author: Bot <>
        commit_message: "ðŸ¤¦"
        commit_user_name: Bot
        commit_user_email:
