name: Deploy
on:
  push:
    branches: [main]
    paths:
      - "tests/**"
      - "an_website/**"
      - ".github/workflows/deploy.yml"
      - "requirements.txt"
      - "an_website.ini"
      - "restart.sh"
concurrency:
  group: deploy
  cancel-in-progress: true
jobs:
  check:
    name: Check for errors
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Pyflakes
        run: |
          grep -E "^pyflakes" check-requirements.txt | xargs pip install
      - name: Run Pyflakes
        run: |
          pyflakes an_website

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.0"
      - name: Install requirements
        run: |
          grep -v "^[#]" requirements.txt | grep -v "pycurl*" | xargs pip install --prefer-binary
      - name: Install pytest and coverage
        run: |
          grep -E "^(pytest|coverage)" check-requirements.txt | xargs pip install
      - name: Run pytest
        run: |
          coverage run --source=an_website -m py.test tests/
      - name: Upload coverage as Build Artifact
        uses: actions/upload-artifact@v2
        with:
          path: .coverage
          name: coverage

  hash_files:
    name: Hash files
    runs-on: ubuntu-latest
    needs:
      - check
      - test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Hash files
        run: |
          mkdir -p public
          echo "Hash der Datei-Hashes:" > public/version.txt
          sh -c "cd an_website && git ls-files | xargs sha1sum | sha1sum | cut -d ' ' -f 1" >> public/version.txt
          echo >> public/version.txt
          echo "Datei-Hashes:" >> public/version.txt
          sh -c "cd an_website && git ls-files | xargs sha1sum" >> public/version.txt
      - name: Upload as Build Artifact
        uses: actions/upload-artifact@v2
        with:
          path: public/
          name: version

  deploy_github_page:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs:
      - check
      - test
      - hash_files
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download coverage
        uses: actions/download-artifact@v2
        with:
          name: coverage
      - name: Download version
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Move files
        run: |
          mkdir -p public
          mv version.txt public/
      - name: Create coverage files
        run: |
          grep -E "^coverage" check-requirements.txt | xargs pip install
          coverage html -d "public/coverage"
          coverage json -o "public/coverage.json"
          set -x
          # get the total percentage covered and round it to 2 decimals:
          total="$(jq '.totals.percent_covered' public/coverage.json | awk '{ printf( "%3.2f\n", $1 ) }')"
          if (( $(echo "$total <= 50" | bc -l) )) ; then
            COLOR=red
          elif (( $(echo "$total > 80" | bc -l) )); then
            COLOR=green
          else
            COLOR=orange
          fi
          curl "https://img.shields.io/badge/coverage-$total%25-$COLOR" > public/coverage/badge.svg
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force_orphan: true
          commit_message: ${{ github.event.head_commit.message }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - check
      - hash_files
      - test
    steps:
      - name: Publish Changes
        run: |
          POST -f -H "Authorization: ${{ secrets.API_RESTART_SECRET }}" \
            https://joshix.asozial.org/restart/?commit=${{ github.event.head_commit.id }}
