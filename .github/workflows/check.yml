name: Check
on:
  push:
    paths:
      - "tests/**"
      - "an_website/**"
      - ".github/workflows/check.yml"
      - "requirements.txt"
      - "pyproject.toml"
      - ".mypy.ini"
      - ".pylintrc"
  pull_request:
    paths:
      - "tests/**"
      - "an_website/**"
      - ".github/workflows/check.yml"
      - "requirements.txt"
      - "pyproject.toml"
      - ".mypy.ini"
      - ".pylintrc"
jobs:
  check_formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Install Black and isort
        run: |
          grep -E "^(black|isort)" check-requirements.txt | xargs pip install
      - name: Run Black
        run: |
          black .
      - name: Run isort
        run: |
          isort .
      - name: Sort requirements
        run: |
          sudo locale-gen de_DE.UTF-8
          LC_COLLATE=de_DE.UTF-8 sort -d -o requirements.txt requirements.txt
          LC_COLLATE=de_DE.UTF-8 sort -d -o check-requirements.txt check-requirements.txt
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: fix formatting
  check_types:
    name: Check types
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache type information
        uses: pat-s/always-upload-cache@v2
        with:
          path: .mypy_cache
          key: mypy-${{ matrix.python-version }}-${{ github.repository }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: mypy-${{ matrix.python-version }}-${{ github.repository }}-${{ github.ref }}-
      - name: Install requirements
        run: |
          grep -v "^[#]" requirements.txt | grep -v "pycurl*" | xargs pip install --prefer-binary
      - name: Install mypy
        run: |
          grep -E "^mypy" check-requirements.txt | xargs pip install
      - name: Install types in check-requrements.txt
        run: |
          grep -E "^types-" check-requirements.txt | xargs pip install
      - name: Run mypy
        run: |
          mypy --install-types --non-interactive -p an_website
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache collected data
        uses: pat-s/always-upload-cache@v2
        with:
          path: ~/.pylint.d
          key: pylint-${{ matrix.python-version }}-${{ github.repository }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: pylint-${{ matrix.python-version }}-${{ github.repository }}-${{ github.ref }}-
      - name: Install requirements
        run: |
          grep -v "^[#]" requirements.txt | grep -v "pycurl*" | xargs pip install --prefer-binary
      - name: Install Flake8 and Pylint
        run: |
          grep -E "^(flake8|pylint)" check-requirements.txt | xargs pip install pip install
      - name: Run Flake8
        if: matrix.python-version != '3.10'
        run:
          flake8 --extend-ignore=D100,D101,D102,D103,D104,E501
      - name: Run Pylint
        run: |
          pylint -d fixme,line-too-long an_website
