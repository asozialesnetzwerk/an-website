// @license magnet:?xt=urn:btih:0b31508aeb0634b347b8270c7bee4d411b5d4109&dn=agpl-3.0.txt AGPL-3.0-or-later
export{};const o=document.getElementById("message-input"),b=o.form,h=document.getElementById("message-section"),s=document.getElementById("open-moji-attribution"),c=document.getElementById("connection-state"),d=document.getElementById("current-user"),f=s==null?void 0:s.getAttribute("openmoji-version");let r=100,l=0,u="";const j=t=>new Date(t+16510752e5).toLocaleString(),v=t=>{const e=document.createElement("div");if(s&&s.getAttribute("type")!=="font"){for(const n of t.author)e.append(m(n));e.innerHTML+=": ";for(const n of t.content)e.append(m(n))}else e.innerText="".concat(t.author.join(""),": ").concat(t.content.join(""));e.setAttribute("tooltip",j(t.timestamp)),h.append(e)},I=t=>{if(d.innerHTML="",s&&s.getAttribute("type")!=="font"){for(const e of t)d.append(m(e));return}d.innerText=t.join("")},m=t=>{const e=[...t],n=(e.length==2&&e[1]==="️"?[e[0]]:e).map(k=>k.codePointAt(0).toString(16).padStart(4,"0")).join("-").toUpperCase(),a=document.createElement("img"),p="/static/openmoji/svg/".concat(n,".svg");return a.src=f?"".concat(p,"?v=").concat(f):p,a.classList.add("emoji"),a.alt=t,a},y=()=>{u&&!o.value&&(o.value=u,u="")},i=t=>{let e;if(c.onclick=()=>{},t==="connecting")e="Versuche mit WebSocket zu verbinden";else if(t==="connected")e="Mit WebSocket verbunden!";else if(t==="disconnected")e="Verbindung getrennt. Drücke hier um erneut zu versuchen.",c.onclick=()=>{l=0,r=500,c.onclick=()=>{},g()};else{console.error("invalid state",t);return}c.setAttribute("state",t),c.setAttribute("tooltip",e)},M=t=>{const e=JSON.parse(t.data);switch(e.type){case"messages":{h.innerText="";for(const n of e.messages)v(n);break}case"message":{v(e.message);break}case"init":{I(e.current_user),console.log("Connected as",e.current_user.join("")),i("connected"),r=100,l=0;break}case"users":{console.debug("Received users data",e.users);break}case"ratelimit":{y(),alert("Retry after ".concat(e.retry_after," seconds."));break}case"error":{y(),alert(e.error);break}default:console.error("Invalid type ".concat(e.type))}},g=()=>{i("connecting");const t=new WebSocket((window.location.protocol==="https:"?"wss:":"ws:")+"//".concat(window.location.host,"/websocket/emoji-chat")),e=setInterval(()=>{t.send("")},1e4);t.onclose=n=>{if(b.onsubmit=()=>{},n.wasClean){console.debug("Connection closed cleanly, code=".concat(n.code," reason=").concat(n.reason)),i("disconnected");return}if(console.debug("Connection closed, reconnecting in ".concat(r,"ms")),i("connecting"),clearInterval(e),l>20){i("disconnected");return}setTimeout(()=>{r=Math.max(500,Math.floor(Math.min(15e3,1.5*r-200))),l++,g()},r)},t.onopen=n=>{console.debug("Opened WebSocket",n)},t.onmessage=M,b.onsubmit=n=>{o.value!==""&&(u=o.value,t.send(JSON.stringify({type:"message",message:o.value})),o.value=""),n.preventDefault()}};g();// @license-end
//# sourceMappingURL=chat.js.map
