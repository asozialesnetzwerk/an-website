{
  "version": 3,
  "sources": ["../../../quotes/report.ts"],
  "sourcesContent": ["import { post, e as getElementById } from \"@utils/utils.js\";\n\ninterface Reasoned {\n    reason?: string;\n}\n\ntype Data = {\n    author_id: number,\n    quote_id: number,\n} | {\n    author_id: number,\n} | {\n    quote_id: number,\n};\n\nfunction getDataFromUrl(): Data {\n    const path: string[] = location.pathname.split('/');\n    console.debug(path);\n    if (path[path.length - 1] == \"\") {\n        path.pop();\n    }\n    const infoIndex = path.indexOf(\"info\");\n    const last = path.pop()!;\n    if (infoIndex == -1) {\n        const [quote_id, author_id] = last.split(\"-\", 2).map(Number);\n        return { quote_id: quote_id!, author_id: author_id! };\n    }\n    const type = path[infoIndex + 1];\n    if (type == \"z\") {\n        return { quote_id: Number(last) };\n    }\n    if (type == \"a\") {\n        return { quote_id: Number(last) };\n    }\n    console.error({ msg: \"invalid path\", path });\n    throw new Error(\"Invalid state\");\n}\n\nfunction createReportButton(anchor: HTMLAnchorElement) {\n    anchor.removeAttribute('href')\n    anchor.addEventListener(\"click\", (event: Event) => {\n        event.preventDefault();\n        const data: Data & Reasoned = getDataFromUrl();\n        const reason = prompt(\"Grund f√ºrs Melden?\", \"\");\n        if (reason === null) {\n            console.debug(\"Aborted\");\n            return;\n        }\n        if (reason) {\n            console.debug(\"Provided reason: \" + reason);\n            data.reason = reason;\n        }\n        void reportQuote(data);\n    });\n}\n\nfunction reportQuote(reportData: Data & Reasoned): Promise<void> {\n    console.debug({ msg: \"reporting\", reportData });\n    return post(\n        \"/api/zitate/melden\",\n        reportData,\n        (data: boolean) => {\n            if (data) {\n                alert(\"Erfolgreich gemeldet!\")\n            }\n        }\n    );\n}\n\ncreateReportButton(getElementById(\"report\")! as HTMLAnchorElement);\n"],
  "mappings": "AAAA,OAAS,QAAAA,EAAM,KAAKC,MAAsB,+CAe1C,SAASC,GAAuB,CAC5B,IAAMC,EAAiB,SAAS,SAAS,MAAM,GAAG,EAE9CA,EAAKA,EAAK,OAAS,CAAC,GAAK,IACzBA,EAAK,IAAI,EAEb,IAAMC,EAAYD,EAAK,QAAQ,MAAM,EAC/BE,EAAOF,EAAK,IAAI,EACtB,GAAIC,GAAa,GAAI,CACjB,GAAM,CAACE,EAAUC,CAAS,EAAIF,EAAK,MAAM,IAAK,CAAC,EAAE,IAAI,MAAM,EAC3D,MAAO,CAAE,SAAUC,EAAW,UAAWC,CAAW,CACxD,CACA,IAAMC,EAAOL,EAAKC,EAAY,CAAC,EAC/B,GAAII,GAAQ,IACR,MAAO,CAAE,SAAU,OAAOH,CAAI,CAAE,EAEpC,GAAIG,GAAQ,IACR,MAAO,CAAE,SAAU,OAAOH,CAAI,CAAE,EAEpC,cAAQ,MAAM,CAAE,IAAK,eAAgB,KAAAF,CAAK,CAAC,EACrC,IAAI,MAAM,eAAe,CACnC,CAEA,SAASM,EAAmBC,EAA2B,CACnDA,EAAO,gBAAgB,MAAM,EAC7BA,EAAO,iBAAiB,QAAUC,GAAiB,CAC/CA,EAAM,eAAe,EACrB,IAAMC,EAAwBV,EAAe,EACvCW,EAAS,OAAO,qBAAsB,EAAE,EAC1CA,IAAW,OAIXA,IACc,GAAsBA,EACpCD,EAAK,OAASC,GAEbC,EAAYF,CAAI,EACzB,CAAC,CACL,CAEA,SAASE,EAAYC,EAA4C,CAE7D,OAAOf,EACH,qBACAe,EACCH,GAAkB,CACXA,GACA,MAAM,uBAAuB,CAErC,CACJ,CACJ,CAEAH,EAAmBR,EAAe,QAAQ,CAAuB",
  "names": ["post", "getElementById", "getDataFromUrl", "path", "infoIndex", "last", "quote_id", "author_id", "type", "createReportButton", "anchor", "event", "data", "reason", "reportQuote", "reportData"]
}
