{
  "version": 3,
  "sources": ["../../../settings/settings.tsx"],
  "sourcesContent": ["// @license magnet:?xt=urn:btih:0b31508aeb0634b347b8270c7bee4d411b5d4109&dn=agpl-3.0.txt AGPL-3.0-or-later\nfunction createBumpscositySlider() {\n    const select = document.getElementById(\n        \"bumpscosity-select\",\n    ) as HTMLSelectElement | undefined;\n\n    if (!select) {\n        return;\n    }\n\n    select.classList.add(\"hidden\");\n    select.setAttribute(\"aria-hidden\", \"true\");\n\n    const possibleLevels: number[] = [...select.options]\n        .map((node) => parseInt(node.value));\n    const startLevel = parseInt(select.value);\n\n    const currentValueDiv = (\n        <div\n            tooltip={startLevel.toString()}\n            style=\"position: absolute; translateX(-50%)\"\n            aria-hidden=\"true\"\n        />\n    ) as HTMLDivElement;\n\n    const showTooltip = () => {\n        currentValueDiv.classList.add(\"show-tooltip\");\n    };\n    const hideTooltip = () => {\n        currentValueDiv.classList.remove(\"show-tooltip\");\n    };\n    const updateSelectAndTooltip = () => {\n        const value = possibleLevels[parseInt(rangeSlider.value)]?.toString() ??\n            \"50\";\n        select.value = value;\n        currentValueDiv.setAttribute(\"tooltip\", value);\n        currentValueDiv.style.left = (1 +\n            (98 *\n                parseInt(rangeSlider.value) /\n                (possibleLevels.length - 1)))\n            .toString() + \"%\";\n    };\n\n    const rangeSlider = (\n        <input\n            type=\"range\"\n            min=\"0\"\n            id={\"bumpscosity-slider\"}\n            max={(possibleLevels.length - 1).toString()}\n            value={possibleLevels.indexOf(startLevel).toString()}\n            onpointermove={() => {\n                showTooltip();\n                updateSelectAndTooltip();\n            }}\n            onpointerleave={hideTooltip}\n            onfocusin={showTooltip}\n            onblur={hideTooltip}\n            aria-valuetext={select.value}\n            aria-valuemin={possibleLevels[0]!.toString()}\n            aria-valuemax={possibleLevels[possibleLevels.length - 1]!\n                .toString()}\n            onchange={() => {\n                let sliderVal = parseInt(rangeSlider.value);\n                const promptStart = `Willst du die Bumpscosity wirklich auf ${\n                    possibleLevels[sliderVal]\n                } setzen? `;\n                if (sliderVal === possibleLevels.length - 1) {\n                    if (\n                        !confirm(\n                            promptStart +\n                                \"Ein so hoher Wert kann katastrophale Folgen haben.\",\n                        )\n                    ) {\n                        sliderVal--;\n                    }\n                } else if (sliderVal === 0) {\n                    if (\n                        !confirm(\n                            promptStart +\n                                \"Fehlende Bumpscosity kann groÃŸes Unbehagen verursachen.\",\n                        )\n                    ) {\n                        sliderVal++;\n                    }\n                }\n\n                rangeSlider.value = sliderVal.toString();\n                updateSelectAndTooltip();\n                rangeSlider.setAttribute(\"aria-valuetext\", select.value);\n            }}\n        />\n    ) as HTMLInputElement;\n\n    const parent = select.parentElement!;\n    parent.style.position = \"relative\";\n    parent.append(<>{currentValueDiv}{rangeSlider}</>);\n\n    rangeSlider.parentElement!.setAttribute(\"for\", rangeSlider.id);\n\n    updateSelectAndTooltip();\n}\n\ncreateBumpscositySlider();\n"],
  "mappings": "AAkBQ,OA6EU,YAAAA,EA7EV,OAAAC,EA6EU,QAAAC,MA7EV,+CAlBR;AACA,SAASC,GAA0B,CAC/B,IAAMC,EAAS,SAAS,eACpB,oBACJ,EAEA,GAAI,CAACA,EACD,OAGJA,EAAO,UAAU,IAAI,QAAQ,EAC7BA,EAAO,aAAa,cAAe,MAAM,EAEzC,IAAMC,EAA2B,CAAC,GAAGD,EAAO,OAAO,EAC9C,IAAKE,GAAS,SAASA,EAAK,KAAK,CAAC,EACjCC,EAAa,SAASH,EAAO,KAAK,EAElCI,EACFP,EAAC,OACG,QAASM,EAAW,SAAS,EAC7B,MAAM,uCACN,cAAY,OAChB,EAGEE,EAAc,IAAM,CACtBD,EAAgB,UAAU,IAAI,cAAc,CAChD,EACME,EAAc,IAAM,CACtBF,EAAgB,UAAU,OAAO,cAAc,CACnD,EACMG,EAAyB,IAAM,CA/BzC,IAAAC,EAAAC,EAgCQ,IAAMC,GAAQD,GAAAD,EAAAP,EAAe,SAASU,EAAY,KAAK,CAAC,IAA1C,YAAAH,EAA6C,aAA7C,KAAAC,EACV,KACJT,EAAO,MAAQU,EACfN,EAAgB,aAAa,UAAWM,CAAK,EAC7CN,EAAgB,MAAM,MAAQ,EACzB,GACG,SAASO,EAAY,KAAK,GACzBV,EAAe,OAAS,IAC5B,SAAS,EAAI,GACtB,EAEMU,EACFd,EAAC,SACG,KAAK,QACL,IAAI,IACJ,GAAI,qBACJ,KAAMI,EAAe,OAAS,GAAG,SAAS,EAC1C,MAAOA,EAAe,QAAQE,CAAU,EAAE,SAAS,EACnD,cAAe,IAAM,CACjBE,EAAY,EACZE,EAAuB,CAC3B,EACA,eAAgBD,EAChB,UAAWD,EACX,OAAQC,EACR,iBAAgBN,EAAO,MACvB,gBAAeC,EAAe,CAAC,EAAG,SAAS,EAC3C,gBAAeA,EAAeA,EAAe,OAAS,CAAC,EAClD,SAAS,EACd,SAAU,IAAM,CACZ,IAAIW,EAAY,SAASD,EAAY,KAAK,EACpCE,EAAc,0CAChB,OAAAZ,EAAeW,CAAS,EAC5B,aACIA,IAAcX,EAAe,OAAS,EAEjC,QACGY,EACI,oDACR,GAEAD,IAEGA,IAAc,IAEhB,QACGC,EACI,yDACR,GAEAD,KAIRD,EAAY,MAAQC,EAAU,SAAS,EACvCL,EAAuB,EACvBI,EAAY,aAAa,iBAAkBX,EAAO,KAAK,CAC3D,EACJ,EAGEc,EAASd,EAAO,cACtBc,EAAO,MAAM,SAAW,WACxBA,EAAO,OAAOhB,EAAAF,EAAA,CAAG,UAAAQ,EAAiBO,GAAY,CAAG,EAEjDA,EAAY,cAAe,aAAa,MAAOA,EAAY,EAAE,EAE7DJ,EAAuB,CAC3B,CAEAR,EAAwB",
  "names": ["Fragment", "jsx", "jsxs", "createBumpscositySlider", "select", "possibleLevels", "node", "startLevel", "currentValueDiv", "showTooltip", "hideTooltip", "updateSelectAndTooltip", "_a", "_b", "value", "rangeSlider", "sliderVal", "promptStart", "parent"]
}
