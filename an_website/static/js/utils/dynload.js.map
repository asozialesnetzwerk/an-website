{
  "version": 3,
  "sources": ["../../../utils/dynload.ts"],
  "sourcesContent": ["// @license magnet:?xt=urn:btih:0b31508aeb0634b347b8270c7bee4d411b5d4109&dn=agpl-3.0.txt AGPL-3.0-or-later\nimport {get, hideSitePane, PopStateHandlers, setLastLocation} from \"./utils.ts\";\n\n\nconst contentContainer = document.getElementById(\"main\") as HTMLDivElement;\n\nlet urlData = {};\n\nconst lastLoaded: [] | [string] = [];\n\ninterface DynloadData {\n    body: string;\n    css: string;\n    redirect: string;\n    scripts: { type: string; src: string | null }[];\n    scrollPos?: [number, number];\n    short_title: string;\n    stylesheets: string[];\n    title: string;\n    url: string;\n}\n\nfunction dynLoadOnData(\n    data: DynloadData | undefined,\n    onpopstate: boolean,\n) {\n    if (!data) {\n        console.error(\"No data received\");\n        return;\n    }\n    if (data.redirect) {\n        location.href = data.redirect;\n        return;\n    }\n    const url = data.url;\n    if (!url) {\n        console.error(\"No URL in data \", data);\n        return;\n    }\n    console.debug(\"Handling data\", data);\n    if (!onpopstate) {\n        if (lastLoaded.length === 1 && lastLoaded[0] === url) {\n            console.debug(\"URL is the same as last loaded, ignoring\");\n            return;\n        }\n        history.pushState(\n            { data, url, stateType: \"dynLoad\" },\n            data.title,\n            url,\n        );\n        setLastLocation(url);\n    }\n    if (!data.body) {\n        location.reload();\n        return;\n    }\n\n    // d.onkeyup = () => {}; // not used in any JS file\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    document.onkeydown = () => {}; // remove keydown listeners\n\n    contentContainer.innerHTML = data.body;\n    if (data.css) {\n        const style = document.createElement(\"style\");\n        style.innerHTML = data.css;\n        contentContainer.appendChild(style);\n    }\n    for (const scriptURL of data.stylesheets) {\n        const link = document.createElement(\"link\");\n        link.rel = \"stylesheet\";\n        link.type = \"text/css\";\n        link.href = scriptURL;\n        contentContainer.appendChild(link);\n    }\n    for (const script of data.scripts) {\n        if (script.src) {\n            const scriptElement = document.createElement(\"script\");\n            scriptElement.type = script.type;\n            scriptElement.src = script.src;\n            contentContainer.appendChild(scriptElement);\n        } else {\n            console.error(\"Script without src\", script);\n        }\n    }\n\n    hideSitePane?.()\n\n    document.title = data.title;\n    const titleElement = document.getElementById(\"title\");\n    if (titleElement) {\n        titleElement.setAttribute(\n            \"short_title\",\n            data.short_title || data.title,\n        );\n        titleElement.innerText = data.title;\n    }\n    urlData = data;\n    return true;\n}\n\nfunction dynLoad(url: string) {\n    console.debug(\"Loading URL\", url);\n    history.replaceState( // save current scrollPos\n        {\n            data: urlData,\n            url: location.href,\n            scrollPos: [\n                document.documentElement.scrollLeft || document.body.scrollLeft,\n                document.documentElement.scrollTop || document.body.scrollTop,\n            ],\n            stateType: \"dynLoad\",\n        },\n        document.title,\n        location.href,\n    );\n    return dynLoadSwitchToURL(url);\n}\n\nasync function dynLoadSwitchToURL(url: string, allowSameUrl = false) {\n    if (!allowSameUrl && url === location.href) {\n        console.debug(\"URL is the same as current, just hide site pane\");\n        hideSitePane?.()\n        return;\n    }\n    contentContainer.prepend(\n        \"Laden... Wenn dies zu lange (Ã¼ber ein paar Sekunden) dauert, lade bitte die Seite neu.\",\n    );\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    await get(url, \"\", (data) => dynLoadOnData(data, false), (error) => {\n        if (url === location.href) {\n            location.reload();\n        } else {\n            location.href = url;\n        }\n    }, \"application/vnd.asozial.dynload+json\");\n}\n\nasync function dynLoadOnPopState(event: PopStateEvent) {\n    if (event.state) {\n        const state = event.state as DynloadData;\n        console.debug(\"Popstate\", state);\n        if (\n            !((event.state as { data: string }).data &&\n                dynLoadOnData(state, true))\n        ) {\n            // when the data did not get handled properly\n            await dynLoadSwitchToURL(\n                state.url || location.href,\n                true,\n            );\n        }\n        if (state.scrollPos) {\n            scrollTo(\n                state.scrollPos[0],\n                state.scrollPos[1],\n            );\n            return;\n        }\n    }\n    console.error(\"Couldn't handle state.\", event.state);\n    location.reload();\n}\n\nconst enableDynload = () => {\n    PopStateHandlers[\"dynLoad\"] = dynLoadOnPopState;\n\n    document.addEventListener(\"click\", (e) => {\n        if ((e.target as HTMLElement | undefined)?.tagName !== \"A\") {\n            return;\n        }\n\n        const anchor = e.target as HTMLAnchorElement;\n        if (anchor.target === \"_blank\") {\n            return;\n        }\n\n        const origin = location.origin;\n\n        const href = (\n            anchor.href.startsWith(\"/\")\n                ? (origin + anchor.href)\n                : anchor.href\n        )\n            .trim();\n\n        const hrefWithoutQuery = href.split(\"?\")[0];\n        if (\n            // link is to different domain\n            !href.startsWith(origin) ||\n            // link is to file, not HTML page\n            (\n                // @ts-expect-error TS2532\n                (hrefWithoutQuery.split(\"/\").pop() ?? \"\").includes(\".\") &&\n                // URLs to redirect page are HTML pages\n                hrefWithoutQuery !== (origin + \"/redirect\")\n            ) ||\n            // link is to /chat, which redirects to another page\n            hrefWithoutQuery === (origin + \"/chat\")\n        ) {\n            return;\n        }\n\n        if (\n            // URL to the same page, but with hash\n            href.startsWith(\"#\") ||\n            href.startsWith(location.href.split(\"#\")[0] + \"#\")\n        ) {\n            return;\n        }\n        e.preventDefault();\n        return dynLoad(href);\n    });\n};\n\nenableDynload();\n// @license-end\n"],
  "mappings": "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",
  "names": ["get", "hideSitePane", "PopStateHandlers", "setLastLocation", "contentContainer", "urlData", "lastLoaded", "dynLoadOnData", "data", "onpopstate", "_a", "url", "style", "scriptURL", "link", "script", "scriptElement", "titleElement", "dynLoad", "dynLoadSwitchToURL", "allowSameUrl", "error", "dynLoadOnPopState", "event", "state", "enableDynload", "e", "_b", "anchor", "origin", "href", "hrefWithoutQuery"]
}
