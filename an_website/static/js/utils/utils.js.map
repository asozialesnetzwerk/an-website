{
  "version": 3,
  "sources": ["../../../utils/better_ui_.ts", "../../../utils/utils.ts"],
  "sourcesContent": ["// @license magnet:?xt=urn:btih:0b31508aeb0634b347b8270c7bee4d411b5d4109&dn=agpl-3.0.txt AGPL-3.0-or-later\n// these functions break if using the CSS-only functionality of the site-pane\nexport function showSitePane() {\n    document.getElementById(\"site-pane\")?.setAttribute(\"open\", \"\");\n}\nexport function hideSitePane() {\n    document.getElementById(\"site-pane\")?.removeAttribute(\"open\");\n}\n\nconst openPane = document.getElementById(\"open-pane\");\nconst sitePane = document.getElementById(\"site-pane\");\n\nif (!openPane || !sitePane) {\n    throw Error(\"open-pane or site-pane not found\");\n}\n\nconst belongsToSitePane = (el: HTMLElement) => (\n    el === openPane || el === sitePane || sitePane.contains(el)\n);\n\n// mouse users\nopenPane.onmouseover = showSitePane;\nsitePane.onmouseleave = hideSitePane;\n\n// keyboard users\ndocument.onfocus = (event: FocusEvent) => {\n    if (belongsToSitePane(event.target as HTMLElement)) {\n        showSitePane();\n    } else {\n        hideSitePane();\n    }\n};\n\n// phone users\nopenPane.onclick = showSitePane;\ndocument.onclick = (e) => {\n    belongsToSitePane(e.target as HTMLElement) || hideSitePane();\n};\n\n// swipe gestures (for phone users)\nconst startPos: { x: number | null; y: number | null } = {\n    x: null,\n    y: null,\n};\ndocument.ontouchstart = (e) => {\n    // save start pos of touch\n    // @ts-expect-error TS2532\n    startPos.x = e.touches[0].clientX;\n    // @ts-expect-error TS2532\n    startPos.y = e.touches[0].clientY;\n};\ndocument.ontouchmove = (e) => {\n    if (startPos.x === null || startPos.y === null) {\n        return;\n    }\n    // calculate difference\n    // @ts-expect-error TS2532\n    const diffX = startPos.x - e.touches[0].clientX;\n    // @ts-expect-error TS2532\n    const diffY = startPos.y - e.touches[0].clientY;\n\n    // early return if just clicked, not swiped\n    if (diffX === 0 && diffY === 0) {\n        return;\n    }\n\n    // reset start pos\n    startPos.x = null;\n    startPos.y = null;\n\n    const minDiffX = Math.max(12, 0.01 * screen.width, diffY * 1.5);\n\n    console.debug({ diffX, minDiffX });\n\n    if (Math.abs(diffX) >= minDiffX) {\n        diffX > 0 ? showSitePane() : hideSitePane();\n    }\n};\n", "export { hideSitePane, showSitePane } from \"./better_ui_.js\";\n\nlet lastLocation = String(location);\n\nexport function getLastLocation(): string {\n    return lastLocation;\n}\n\nexport function setLastLocation(url: string): void {\n    lastLocation = url;\n}\n\nexport function post(\n    url: string,\n    params = {},\n    ondata = console.log,\n    onerror = console.error,\n    accept = \"application/json\",\n): Promise<void> {\n    return fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(params),\n        headers: {\n            \"Accept\": accept,\n            \"Content-Type\": \"application/json\",\n        },\n    })\n        .then((response) => response.json())\n        .catch(onerror)\n        .then(ondata)\n        .catch(onerror);\n}\n\nexport function get(\n    url: string,\n    params: Record<string, string> | string = {},\n    ondata = console.log,\n    onerror = console.error,\n    accept = \"application/json\",\n): Promise<void> {\n    const paramsString = (new URLSearchParams(params)).toString();\n    return fetch(paramsString ? `${url}?${paramsString}` : url, {\n        method: \"GET\",\n        headers: { Accept: accept },\n    })\n        .then(\n            (response) => response.json(),\n        )\n        .catch(onerror)\n        .then(ondata)\n        .catch(onerror);\n}\n\nexport const PopStateHandlers: Record<\n    string,\n    (state: PopStateEvent) => unknown\n> = {\n    // always reload the location if URLParamChange\n    URLParamChange: () => {\n        location.reload();\n    },\n};\n\nexport function setURLParam(\n    param: string,\n    value: string,\n    state: unknown,\n    stateType = \"URLParamChange\",\n    push = true,\n) {\n    return setMultipleURLParams([[param, value]], state, stateType, push);\n}\n\nexport function setMultipleURLParams(\n    params: [string, string][],\n    state: unknown,\n    stateType = \"URLParamChange\",\n    push = true,\n) {\n    // log(\"setURLParam\", param, value, state, onpopstate);\n    const urlParams = new URLSearchParams(location.search);\n    for (const [param, value] of params) {\n        urlParams.set(param, value);\n    }\n    const newUrl =\n        `${location.origin}${location.pathname}?${urlParams.toString()}`;\n    // log(\"newUrl\", newUrl);\n    (state as { stateType: string }).stateType = stateType;\n    if (push && newUrl !== location.href) {\n        history.pushState(state, newUrl, newUrl);\n    } else {\n        history.replaceState(state, newUrl, newUrl);\n    }\n    lastLocation = location.href;\n    return newUrl;\n}\n\nfunction scrollToId() {\n    if (location.hash === \"\") {\n        return;\n    }\n    const header = document.getElementById(\"header\");\n    if (!header) {\n        return;\n    }\n    const el = document.querySelector(location.hash);\n    if (!el) {\n        return;\n    }\n\n    scrollBy(\n        0,\n        el.getBoundingClientRect().top - Math.floor(\n            parseFloat(getComputedStyle(header).height),\n        ),\n    );\n}\n// scroll after few ms so the scroll is right on page load\nsetTimeout(scrollToId, 4);\nwindow.onhashchange = scrollToId;\n\nwindow.onpopstate = (event: PopStateEvent) => {\n    if (lastLocation.split(\"#\")[0] === location.href.split(\"#\")[0]) {\n        // Only hash changed\n        lastLocation = location.href;\n        scrollToId();\n        return;\n    }\n    if (event.state) {\n        const state = event.state as { stateType: string };\n        const stateHandler = PopStateHandlers[state.stateType];\n        if (stateHandler) {\n            event.preventDefault();\n            stateHandler(event);\n            lastLocation = location.href;\n            scrollToId();\n            return;\n        } else {\n            console.error(\"Couldn't find state handler for state\", state);\n        }\n    }\n\n    console.error(\"Couldn't handle state. \", event.state);\n    lastLocation = location.href;\n    location.reload();\n};\n// @license-end\n"],
  "mappings": "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",
  "names": ["showSitePane", "_a", "hideSitePane", "openPane", "sitePane", "belongsToSitePane", "el", "event", "e", "startPos", "diffX", "diffY", "minDiffX", "lastLocation", "getLastLocation", "setLastLocation", "url", "post", "params", "ondata", "onerror", "accept", "response", "get", "paramsString", "PopStateHandlers", "setURLParam", "param", "value", "state", "stateType", "push", "setMultipleURLParams", "urlParams", "newUrl", "scrollToId", "header", "el", "event", "stateHandler"]
}
